import pickle
savelist = [] #List used for saving questions
listofobjects = [] #List used for saving objects
objectqualities = []
starterdict = {} #Used when asking questions to help assign dictionary to object
class Leaf: #Class for our object
  def __init__(self, question, left=None, right=None): #Startup assignment
    self.question = question
    self.left = left
    self.right = right
    self.diction = {}
  def dictchange(self, dicti): #Function for dict changing, dicti is inputted dict
    hname = dicti.keys() #Simple holder var for all the keys given by dicti
    for x in hname: #Loops for every key
      self.diction[x] = dicti.get(x) #Creates dict entry and assigns it
def yes(query): #function that asks inputted question and returns y/n answer
  while True:
    ans = input(query) #creates input question from query and assigns to var
    ans = str.lower(ans[0:1]) #only checks the first letter
    if ans == 'y': #if it starts with 'y' aka yes
      return True #question is true
    else:
      return False #question is false
knowledge = Leaf("baseball") # assigns a var to the leaf class "baseball" as a starter
def mainfunc(): #The main function for asking questions and assigning Leafs
  while True: #Loops until break
    starterdict = {}#Clears the starterdict
    print #Line break
    if not yes("Are you seeking an object? "): #If the question is false
      print("Then it is not in this database")
      break #Break loop
    place = knowledge
    while place.left != None:
      if yes(place.question+"? "):
        starterdict[str(place.question)] = "Y"
        place=place.right
      else:
        starterdict[str(place.question)] = "N"
        place=place.left
    if yes("Is it a " + place.question + "? "):
      place.diction = starterdict
      continue
    thing = input("What is its name? ")
    thing = thing.lower()
    question = input ("What question would distinguish a/an %s from a/an %s? "% (thing, place.question))
    question = question.lower()
    place.left = Leaf(place.question)
    zee = Leaf(thing)
    place.right = zee
    place.question = question
    starterdict[str(question)] = "Y"
    zee.dictchange(starterdict)
    savelist.append(place)
    listofobjects.append(zee)
    if not yes("If this thing was a/an %s the answer would be? " % thing):
      zee.diction[question] = "N"
      (place.right, place.left) = (place.left, place.right)
  commandaccess()
def save():
  save_on = open("picklejar", "wb")
  for x in savelist:
    pickle.dump(x, save_on)
  save_on.close()
  obj_on = open("objects", "wb")
  #for x in listofobjects:
  pickle.dump(listofobjects, obj_on)
  obj_on.close()
  commandaccess()
def load():
  save_off = open("picklejar","rb")
  savelist.append(pickle.load(save_off))
  save_off.close()
  obj_off = open("objects","rb")
  data = (pickle.load(obj_off))
  for x in data:
    listofobjects.append(x)
  obj_off.close()
def showobjectqualities(objname):
  for x in listofobjects:
    if objname == x.question:
      print(x.diction)
def sav():
  for x in savelist:
    print(x.question)
def commandaccess():
  prompt = input("Enter command: quit/save/ask/object: ")
  prompt = prompt.lower()
  if prompt == "":
    print("Please enter character")
    commandaccess()
  elif prompt[0] == "q":
    print("Ending session...")
  elif prompt[0] == "s":
    save()
  elif prompt[0] == "a":
    mainfunc()
  elif prompt[0] == "o":
    objname = str(input("Enter object name to input: "))
    objname = objname.lower()
    print(objname)
    showobjectqualities(str(objname))
    commandaccess()
  else:
    print("Invalid command")
    commandaccess()
if __name__ == "__main__":
  startup = input("Load Last Session? ")
  startup = startup.lower()
  if (startup)[0:1] == "y":
    load()
    knowledge = savelist[0]
  else:
    alltogether = Leaf("baseball")
    listofobjects.append(alltogether)
  commandaccess()
