import pickle
savelist = []
samplelist = []
listofobjects = []
objectqualities = []
starterdict = {}
class Leaf:
  def __init__(self, question, left=None, right=None):
    self.question = question
    self.left = left
    self.right = right
    self.diction = {}
  def dictchange(self, dicti):
    hname = dicti.keys()
    for x in hname:
      self.diction[x] = dicti.get(x)
    print(self.diction)
def yes(query):
  while True:
    ans = input(query)
    ans = str.lower(ans[0:1])
    if ans == 'y':
      return True
    else:
      return False
knowledge = Leaf("baseball")
def mainfunc():
  while True:
    starterdict = {}
    print
    if not yes("Are you seeking an object? "):
      print("Then it is not in this database")
      break
    place = knowledge
    while place.left != None:
      if yes(place.question+"? "):
        starterdict[str(place.question)] = "Y"
        place=place.right
      else:
        starterdict[str(place.question)] = "N"
        place=place.left
    if yes("Is it a " + place.question + "? "):
      place.diction = starterdict
      continue
    thing = input("What is its name? ")
    question = input ("What question would distinguish a %s from a %s? "% (thing, place.question))
    place.left = Leaf(place.question)
    zee = Leaf(thing)
    place.right = zee
    place.question = question
    print(starterdict)
    zee.dictchange(starterdict)
    savelist.append(place)
    listofobjects.append(zee)
    objectqualities.append(question)
    if not yes("If this thing was %s the answer would be? " % thing):
      (place.right, place.left) = (place.left, place.right)
def save():
  save_on = open("picklejar", "wb")
  for x in savelist:
    pickle.dump(x, save_on)
  save_on.close()
  obj_on = open("objects", "wb")
  #for x in listofobjects:
  pickle.dump(listofobjects, obj_on)
  obj_on.close()
def load():
  save_off = open("picklejar","rb")
  savelist.append(pickle.load(save_off))
  save_off.close()
  obj_off = open("objects","rb")
  data = (pickle.load(obj_off))
  for x in data:
    listofobjects.append(x)
  obj_off.close()
def obj():
  for x in listofobjects:
    print(x.question)
def showobjectqualities(objname):
  for x in listofobjects:
    if objname == x.question:
      print(x.diction)
def sav():
  for x in savelist:
    print(x.question)
if __name__ == "__main__":
  if (input("Load Last Session? "))[0:1] == "y":
    load()
    knowledge = savelist[0]
  else:
    listofobjects.append(Leaf("baseball"))
  mainfunc()
